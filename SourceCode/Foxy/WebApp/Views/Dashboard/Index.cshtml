@using WebApp.DTOs;
@model DashboardModel

@{
    int colNr = 6;
}

<br />
@if (!string.IsNullOrEmpty(SharedInfo.ShowSuccessMessage))
{
    <script>
        toastr.success("Welcome!")
    </script>
    SharedInfo.ShowSuccessMessage = "";
}

<br />
<br />

<div class="row">
    <div class="col-xs-12 col-sm-6 col-md-9"></div>
    <div class="rounded-top col-xs-6 col-md-3 text-center" id="vocabTitle"><h3><span class="centerWhite">Vocabular</span></h3></div>
</div>
<div class="row jumbotron jumbotron-fluid" id="jumbo">
    <div class="container" t>
        <div class="row levels">
            <div class="square-box col-sm" id="seed">
                <div class='square-content'>
                    <div>
                        <span>
                            Seed
                        </span>
                    </div>
                </div>
            </div>
            <div class="square-box col-sm" id="leaf">
                <div class='square-content'>
                    <div>
                        <span>
                            Leaf
                        </span>
                    </div>
                </div>
            </div>
            <div class="square-box col-sm" id="bloom">
                <div class='square-content'>
                    <div>
                        <span>
                            Bloom
                        </span>
                    </div>
                </div>
            </div>
            <div class="square-box col-sm" id="flower">
                <div class='square-content'>
                    <div>
                        <span>
                            Flourished
                        </span>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-4 text-center">
                <div id="circle-radical">
                    <script>
                    RadicalCircliful(@Model.RadicalPercent);
                    </script>
                </div>
                <div class="text-center" style="margin-bottom:1em;">
                    <button class="btn btn-outline-secondary" type="button" data-toggle="collapse" data-target="#radicalList" aria-expanded="false" aria-controls="collapseExample">
                        Radical
                    </button>
                </div>
                <div class="collapse" id="radicalList">
                    <div class="container text-center container-dashboard-vocab">
                        <p>Remaining lessons  <span class="badge badge-radical badge-number-size">@Model.RadicalsLesson.Count()</span></p>
                        
                        @{
                            var n = Model.RadicalsLesson.Count() / colNr;
                            var m = Model.RadicalsLesson.Count() % colNr;
                            if (m != 0) { n = n + 1; } else { m = colNr; }
                        }
                        @for (int i = 0; i < n; ++i)
                        {
                            <div class="row text-center">
                                @for (int j = 0; (i < n - 1 && j < colNr) || (n - 1 == i && j < m); ++j)
                                {
                                    string tooltip_style = "<p>"+ @Model.RadicalsLesson[i * colNr + j].Template.Meaning + "</p>";
                                    <div class="little-squares rounded" data-toggle="tooltip" data-placement="top" data-html="true" title="@tooltip_style" id="little-radicals">
                                        <div class="little-content">
                                            <div class="table">
                                                <div class="table-cell little-text .ja">
                                                    @Model.RadicalsLesson[i * colNr + j].Template.Name
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                    <div class="container text-center container-dashboard-vocab">
                        <p>Viewed lesson  <span class="badge badge-radical badge-number-size">@Model.RadicalsViewed.Count()</span></p>
                        @{
                            n = Model.RadicalsViewed.Count() / colNr;
                            m = Model.RadicalsViewed.Count() % colNr;
                            if (m != 0) { n = n + 1; } else { m = colNr; }
                        }
                        @for (int i = 0; i < n; ++i)
                        {
                            <div class="row text-center">
                                @for (int j = 0; (i < n - 1 && j < colNr) || (n - 1 == i && j < m); ++j)
                                {
                                    <div class="little-squares rounded" id="little-radicals">
                                        <div class="little-content">
                                            <div class="table">
                                                <div class="table-cell little-text .ja">
                                                    @Model.RadicalsViewed[i * colNr + j].Template.Name
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                    <div class="container text-center container-dashboard-vocab">
                        <p>Passed items  <span class="badge badge-radical badge-number-size">@Model.RadicalsPassed.Count()</span></p>
                        @{
                            n = Model.RadicalsPassed.Count() / colNr;
                            m = Model.RadicalsPassed.Count() % colNr;
                            if (m != 0) { n = n + 1; } else { m = colNr; }
                        }
                        @for (int i = 0; i < n; ++i)
                        {
                            <div class="row text-center">
                                @for (int j = 0; (i < n - 1 && j < colNr) || (n - 1 == i && j < m); ++j)
                                {
                                    <div class="little-squares rounded" id="little-radicals">
                                        <div class="little-content">
                                            <div class="table">
                                                <div class="table-cell little-text .ja">
                                                    @Model.RadicalsPassed[i * colNr + j].Template.Name
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-lg-4 text-center">
                <div id="circle-kanji">
                    <script>
                    KanjiCircliful(@Model.KanjiPercent);
                    </script>
                </div>
                <div class="text-center" style="margin-bottom:1em;">
                    <button class="btn btn-outline-secondary" type="button" data-toggle="collapse" data-target="#kanjiList" aria-expanded="false" aria-controls="collapseExample">
                        Kanji
                    </button>
                </div>
                <div class="collapse" id="kanjiList">
                    <div class="container text-center container-dashboard-vocab">
                        <p>Remaining lessons <span class="badge badge-kanji badge-number-size">@Model.KanjisLesson.Count()</span></p>
                        @{
                            n = Model.KanjisLesson.Count() / colNr;
                            m = Model.KanjisLesson.Count() % colNr;
                            if (m != 0) { n = n + 1; } else { m = colNr; }
                        }
                        @for (int i = 0; i < n; ++i)
                        {
                            <div class="row text-center">
                                @for (int j = 0; (i < n - 1 && j < colNr) || (n - 1 == i && j < m); ++j)
                                {
                                    <div class="little-squares rounded" id="little-kanji">
                                        <div class="little-content">
                                            <div class="table">
                                                <div class="table-cell little-text .ja">
                                                    @Model.KanjisLesson[i * colNr + j].Template.Name
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                    <div class="container text-center container-dashboard-vocab">
                        <p>Viewed lessons <span class="badge badge-kanji badge-number-size">@Model.KanjisViewed.Count()</span></p>
                        @{
                            n = Model.KanjisViewed.Count() / colNr;
                            m = Model.KanjisViewed.Count() % colNr;
                            if (m != 0) { n = n + 1; } else { m = colNr; }
                        }
                        @for (int i = 0; i < n; ++i)
                        {
                            <div class="row text-center">
                                @for (int j = 0; (i < n - 1 && j < colNr) || (n - 1 == i && j < m); ++j)
                                {
                                    <div class="little-squares rounded" id="little-kanji">
                                        <div class="little-content">
                                            <div class="table">
                                                <div class="table-cell little-text .ja">
                                                    @Model.KanjisViewed[i * colNr + j].Template.Name
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                    <div class="container text-center container-dashboard-vocab">
                        <p>Passed items <span class="badge badge-kanji badge-number-size">@Model.KanjisPassed.Count()</span></p>
                        @{
                            n = Model.KanjisPassed.Count() / colNr;
                            m = Model.KanjisPassed.Count() % colNr;
                            if (m != 0) { n = n + 1; } else { m = colNr; }
                        }
                        @for (int i = 0; i < n; ++i)
                        {
                            <div class="row text-center">
                                @for (int j = 0; (i < n - 1 && j < colNr) || (n - 1 == i && j < m); ++j)
                                {
                                    <div class="little-squares rounded" id="little-kanji">
                                        <div class="little-content">
                                            <div class="table">
                                                <div class="table-cell little-text .ja">
                                                    @Model.KanjisPassed[i * colNr + j].Template.Name
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-lg-4 text-center">
                <div id="circle-word">
                    <script>
                    WordCircliful(@Model.WordsPercent);
                    </script>
                </div>
                <div class="text-center" style="margin-bottom:1em;">
                    <button class="btn btn-outline-secondary" type="button" data-toggle="collapse" data-target="#wordsList" aria-expanded="false" aria-controls="collapseExample">
                        Words
                    </button>
                </div>
                <div class="collapse" id="wordsList">
                    <div class="container text-center container-dashboard-vocab">
                        <p>Lessons <span class="badge badge-word badge-number-size">@Model.WordsLesson.Count()</span></p>
                        @{
                            n = Model.WordsLesson.Count();
                        }
                        @for (int i = 0; i < n; ++i)
                        {
                            <div class="text-center">
                                <div class="rounded little-squares-words" id="little-words">
                                    <div class="little-content word-no-top-pad">
                                        <div class="table">
                                            <div class="table-cell little-text .ja">
                                                @Model.WordsLesson[i].Template.Name
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row" style="margin-bottom:5em">
    <button type="button" class="btn btn-info btn-lg rounded-0" style="margin-right:0.3em;" asp-controller="VocabularLesson" asp-action="Index">Lesson</button>
    <button type="button" class="btn btn-info btn-lg rounded-0">Review</button>
</div>

<div class="jumbotron jumbotron-fluid">
    <div class="container">
        <h1 class="display-4">Grammar</h1>
        <p class="lead">This is a modified jumbotron that occupies the entire horizontal space of its parent.</p>
    </div>
</div>

<div class="jumbotron jumbotron-fluid">
    <div class="container">
        <h1 class="display-4">Reading</h1>
        <p class="lead">This is a modified jumbotron that occupies the entire horizontal space of its parent.</p>
    </div>
</div>