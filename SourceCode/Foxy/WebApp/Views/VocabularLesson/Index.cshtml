@{
    Layout = null;
}
@model LessonModel
@*@if (Model.LessonList.Count() == 0)
    {
        <p>You have no Lesson!</p>
    }
    else
    {
        <div>Header menu</div>
        @await Html.PartialAsync("VocabLessonItem", Model.LessonList[0])
        <div>footer lesson</div>
    }*@

@{ 
    Data.Domain.Entities.TemplateItems.VocabularType elementType;
    string elementNameColor;
    string elementMeaningColor;
    string hideDiv;
}
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>LogIn</title>

    <!-- Bootstrap core CSS -->
    <link href="~/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <script src="~/vendor/jquery/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"></script>
    <script src="~/vendor/bootstrap/js/bootstrap.min.js"></script>

    <link href="~/toastr/toastr.css" rel="stylesheet" />
    <script src="~/toastr/toastr.js"></script>
    <link href="~/css/LessonVocabular.css" rel="stylesheet" />


</head>

<body>
    <div class="lesson-container">
        <div id="first-div">

        </div>
        <div id="second-div">
            <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <div>
                            @{ 
                                hideDiv = "";
                                elementType = Model.LessonList[0].Template.Type;
                                if (elementType == Data.Domain.Entities.TemplateItems.VocabularType.Radical)
                                {
                                    elementNameColor = "radical-color";
                                    hideDiv = "hide-a-div";
                                }
                                else if(elementType == Data.Domain.Entities.TemplateItems.VocabularType.Kanji){
                                    elementNameColor = "kanji-color";
                                }
                                else
                                {
                                    elementNameColor = "word-color";
                                }
                                elementMeaningColor = "mini-" + elementNameColor;
                            }
                            <div class="div-for-name @elementNameColor">
                                @Model.LessonList[0].Template.Name
                            </div>
                            <div class="div-for-meaning @elementMeaningColor">
                                @Model.LessonList[0].Template.Meaning
                            </div>
                            <div class="div-for-meaningmnemonic">
                                <h3 style="color:#574747">Meaning</h3>
                                @Model.LessonList[0].Template.MeaningMnemonic
                            </div>
                            <div class="div-for-readingmnemoning @hideDiv">
                                <h3 style="color:#574747">Reading</h3>
                                @Model.LessonList[0].Template.ReadingMnemonic
                            </div>
                        </div>
                    </div>
                    @for (int i = 1; i < Model.LessonList.Count(); ++i)
                    {
                        <div class="carousel-item">
                            <div>
                                @{
                                    hideDiv = "";
                                    elementType = Model.LessonList[i].Template.Type;
                                    if (elementType == Data.Domain.Entities.TemplateItems.VocabularType.Radical)
                                    {
                                        elementNameColor = "radical-color";
                                        hideDiv = "hide-a-div";
                                    }
                                    else if (elementType == Data.Domain.Entities.TemplateItems.VocabularType.Kanji)
                                    {
                                        elementNameColor = "kanji-color";
                                    }
                                    else
                                    {
                                        elementNameColor = "word-color";
                                    }
                                    elementMeaningColor = "mini-" + elementNameColor;

                                }
                                <div class="div-for-name @elementNameColor">
                                    @Model.LessonList[i].Template.Name
                                </div>
                                <div class="div-for-meaning @elementMeaningColor">
                                    @Model.LessonList[i].Template.Meaning
                                </div>
                                <div class="div-for-meaningmnemonic">
                                    <h3 style="color:#574747";>Meaning</h3>
                                    @Model.LessonList[i].Template.MeaningMnemonic
                                </div>
                                <div class="div-for-readingmnemoning @hideDiv">
                                    <h3 style="color:#574747" ;>Reading</h3>
                                    @Model.LessonList[i].Template.ReadingMnemonic
                                    <p>
                                        @Model.LessonList[i].Template.Reading
                                    </p>

                                    <button class="btn btn-light">
                                        click for sound
                                    </button>
                                </div>
                            </div>
                        </div>



                        @*<div class="lesson-container" id="element-container">
                                <div style="height:100%; width:100%;">
                                    <div class="card" style="width: 18rem; margin:15%;margin-left:40%;">
                                        <div class="card-body">
                                            <h5 class="card-title">@Model.LessonList[i].Template.Name</h5>
                                            <h6 class="card-subtitle mb-2 text-muted">@Model.LessonList[i].Template.Meaning</h6>
                                            <p class="card-text">@Model.LessonList[i].Template.Reading</p>
                                            <a href="#" class="card-link">@Model.LessonList[i].Template.MeaningMnemonic</a>
                                            <a href="#" class="card-link">@Model.LessonList[i].Template.ReadingMnemonic</a>
                                        </div>
                                    </div>
                                </div>
                            </div>*@
                    }
                </div>
            </div>
            <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="sr-only">Previous</span>
            </a>
            <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="sr-only">Next</span>
            </a>
        </div>
    </div>
    <div id="third-div">

    </div>
    </div>
</body>