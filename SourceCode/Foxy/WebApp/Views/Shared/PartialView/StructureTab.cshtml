@using Business.Wrappers;
@model VocabularWrapper
@{
    string title = "";
    if (Model.VocabularType.Equals("kanji"))
    {
        title = "radical";
    }
    else if (Model.VocabularType.Equals("word"))
    {
        title = "kanji";
    }

    string componentColor = "";
    componentColor = title + "-color";
}
@if (Model.VocabularType.Equals("radical"))
{
    <div class="container text-center justify-content-center" style="margin-top:2em!important;margin-bottom:2em!important;padding:0!important;padding:0!important">
        <h5 style="color:gray;text-transform:uppercase;margin:0em!important;padding:0!important">nothing to display</h5>
    </div>
}
else if (Model.Components.Count() == 0)
{
    <div class="container text-center justify-content-center" style="margin-top:2em!important;margin-bottom:2em!important;padding:0!important;padding:0!important">
        <h5 style="color:gray;text-transform:uppercase;margin:0em!important;padding:0!important">nothing to display</h5>
    </div>
}
else
{
    <div class="row" style="all:unset;">
        <div class="col header-col" style="width:100%">
            <p class="heading-title">
                @title breakdown
            </p>
        </div>
    </div>

    <div class="row" style="all:unset;">
        <div class="col components-col" style="width:100%">

            <div class="row text-center" style="margin-left:0!important">
                @for (int i = 0; i < Model.Components.Count(); ++i)
                {
                    string typeC = "radical";
                    if (Model.Template.Type == Data.Domain.Entities.TemplateItems.VocabularType.Word)
                    {
                        typeC = "kanji";
                    }
                    <div class="col" style="width:100%!important">
                        <div class="row" style="margin-bottom:1em!important;margin-left:0!important">
                            <div class="component-name-box @componentColor">
                                <a style="all:unset!important;width:100%!important" asp-controller="Vocabular" asp-action="@typeC" asp-route-name="@Model.Components[i].Name">

                                    <div class="component-name-text">
                                        @Model.Components[i].Name
                                    </div>
                                </a>
                            </div>
                        </div>
                        <div class="row meaning-comp">
                            @{
                                string meaningFirst = @Model.Components[i].Meaning.Split(";")[0];
                            }
                            <p class="meaning-comp-text">
                                @meaningFirst
                            </p>
                        </div>
                    </div>

                }
            </div>

        </div>
    </div>
}